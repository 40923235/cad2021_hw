var tipuesearch = {"pages": [{'title': 'About', 'text': '本學期的電腦輔助設計實習, 要求每一位學員根據本 HW template 的格式建立個人的作業倉儲與網頁. \n \n 40923235 \n 網站倉儲:\xa0 https://github.com/40923235/cad2021_hw \n 網站連結:\xa0 https://40923235.github.io/cad2021_hw/content/index.html \n 其他與作者或作業相關資料說明或介紹 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Task', 'text': '', 'tags': '', 'url': 'Task.html'}, {'title': 'Hwpages', 'text': '\n \n \n cad \n github account \n \n \n \n \n 40723126 \n 40723126 \n https://40723126.github.io/cad2021_hw/ \n 40723126 \n \n \n 40723135 \n 40723135 \n https://40723135.github.io/cad2021_hw/ \n 40723135 \n \n \n 40723217 \n 40723217 \n https://40723217.github.io/cad2021_hw/ \n 40723217 \n \n \n 40732331 \n 40732331 \n https://40732331.github.io/cad2021_hw/ \n 40732331 \n \n \n 40823114 \n 40823114 \n https://40823114.github.io/cad2021_hw/ \n 40823114 \n \n \n 40823115 \n 40823115 \n https://40823115.github.io/cad2021_hw/ \n 40823115 \n \n \n 40823117 \n pyc40823117 \n https://pyc40823117.github.io/cad2021_hw/ \n 40823117 \n \n \n 40823119 \n 40823119 \n https://40823119.github.io/cad2021_hw/ \n 40823119 \n \n \n 40823122 \n 40823122 \n https://40823122.github.io/cad2021_hw/ \n 40823122 \n \n \n 40823127 \n 40823127 \n https://40823127.github.io/cad2021_hw/ \n 40823127 \n \n \n 40823146 \n 40823146 \n https://40823146.github.io/cad2021_hw/ \n 40823146 \n \n \n 40823148 \n 40823148 \n https://40823148.github.io/cad2021_hw/ \n 40823148 \n \n \n 40823215 \n 40823215 \n https://40823215.github.io/cad2021_hw/ \n 40823215 \n \n \n 40871106 \n 40871106 \n https://40871106.github.io/cad2021_hw/ \n 40871106 \n \n \n 40923201 \n 40923201 \n \n 40923201 \n \n \n 40923203 \n youshin40923203 \n https://youshin40923203.github.io/cad2021_hw/ \n 40923203 \n \n \n 40923204 \n 40923204 \n https://40923204.github.io/cad2021_hw/ \n 40923204 \n \n \n 40923205 \n 40923205 \n https://40923205.github.io/cad2021_hw/ \n 40923205 \n \n \n 40923206 \n 40923206-1 \n https://40923206-1.github.io/cad2021_hw/ \n 40923206 \n \n \n 40923207 \n 40923207 \n https://40923207.github.io/cad2021_hw/ \n 40923207 \n \n \n 40923208 \n nfu40923208 \n https://nfu40923208.github.io/cad2021_hw/ \n 40923208 \n \n \n 40923209 \n nfu40923209 \n https://nfu40923209.github.io/cad2021_hw/ \n 40923209 \n \n \n 40923210 \n 40923210 \n https://40923210.github.io/cad2021_hw/ \n 40923210 \n \n \n 40923211 \n a40923211 \n https://a40923211.github.io/cad2021_hw/ \n 40923211 \n \n \n 40923212 \n 40923212 \n https://40923212.github.io/cad2021_hw/ \n 40923212 \n \n \n 40923213 \n 40923213 \n https://40923213.github.io/cad2021_hw/ \n 40923213 \n \n \n 40923214 \n 40923214 \n https://40923214.github.io/cad2021_hw/ \n 40923214 \n \n \n 40923216 \n 40923216 \n https://40923216.github.io/cad2021_hw/ \n 40923216 \n \n \n 40923217 \n 40923217 \n https://40923217.github.io/cad2021_hw/ \n 40923217 \n \n \n 40923218 \n 40923218 \n https://40923218.github.io/cad2021_hw/ \n 40923218 \n \n \n 40923219 \n nfu40923219 \n https://nfu40923219.github.io/cad2021_hw/ \n 40923219 \n \n \n 40923220 \n 40923220 \n https://40923220.github.io/cad2021_hw/ \n 40923220 \n \n \n 40923221 \n 40923221 \n https://40923221.github.io/cad2021_hw/ \n 40923221 \n \n \n 40923223 \n 40923223 \n https://40923223.github.io/cad2021_hw/ \n 40923223 \n \n \n 40923224 \n s40923224 \n https://s40923224.github.io/cad2021_hw/ \n 40923224 \n \n \n 40923225 \n 40923225 \n https://40923225.github.io/cad2021_hw/ \n 40923225 \n \n \n 40923226 \n 40923226 \n https://40923226.github.io/cad2021_hw/ \n 40923226 \n \n \n 40923227 \n 40923227 \n https://40923227.github.io/cad2021_hw/ \n 40923227 \n \n \n 40923228 \n 40923228 \n https://40923228.github.io/cad2021_hw/ \n 40923228 \n \n \n 40923229 \n 40923229 \n https://40923229.github.io/cad2021_hw/ \n 40923229 \n \n \n 40923230 \n 40923230 \n https://40923230.github.io/cad2021_hw/ \n 40923230 \n \n \n 40923231 \n 40923231 \n https://40923231.github.io/cad2021_hw/ \n 40923231 \n \n \n 40923232 \n 40923232 \n https://40923232.github.io/cad2021_hw/ \n 40923232 \n \n \n 40923233 \n 40923233 \n https://40923233.github.io/cad2021_hw/ \n 40923233 \n \n \n 40923234 \n 40923234 \n https://40923234.github.io/cad2021_hw/ \n 40923234 \n \n \n 40923235 \n 40923235 \n https://40923235.github.io/cad2021_hw/ \n 40923235 \n \n \n 40923236 \n 40923236 \n https://40923236.github.io/cad2021_hw/ \n 40923236 \n \n \n 40923237 \n 40923237 \n https://40923237.github.io/cad2021_hw/ \n 40923237 \n \n \n 40923238 \n 40923238 \n https://40923238.github.io/cad2021_hw/ \n 40923238 \n \n \n 40923239 \n 40923239 \n https://40923239.github.io/cad2021_hw/ \n 40923239 \n \n \n 40923240 \n 40923240 \n https://40923240.github.io/cad2021_hw/ \n 40923240 \n \n \n 40923241 \n 40923241 \n https://40923241.github.io/cad2021_hw/ \n 40923241 \n \n \n 40923242 \n 40923242 \n https://40923242.github.io/cad2021_hw/ \n 40923242 \n \n \n 40923243 \n 40923243 \n https://40923243.github.io/cad2021_hw/ \n 40923243 \n \n \n 40923244 \n 40923244 \n https://40923244.github.io/cad2021_hw/ \n 40923244 \n \n \n 40923245 \n 40923245-1 \n https://40923245-1.github.io/cad2021_hw/ \n 40923245 \n \n \n 40923246 \n 40923246 \n https://40923246.github.io/cad2021_hw/ \n 40923246 \n \n \n 40923247 \n 40923247 \n https://40923247.github.io/cad2021_hw/ \n 40923247 \n \n \n 40923248 \n 40923248 \n https://40923248.github.io/cad2021_hw/ \n 40923248 \n \n \n 40923249 \n 40923249-1 \n https://40923249-1.github.io/cad2021_hw/ \n 40923249 \n \n \n 40923250 \n 40923250 \n https://40923250.github.io/cad2021_hw/ \n 40923250 \n \n \n 40923251 \n 40923251 \n https://40923251.github.io/cad2021_hw/ \n 40923251 \n \n \n 40923252 \n 40923252 \n https://40923252.github.io/cad2021_hw/ \n 40923252 \n \n \n 40923253 \n 40923253 \n https://40923253.github.io/cad2021_hw/ \n 40923253 \n \n \n 40971220 \n 40971220 \n https://40971220.github.io/cad2021_hw/ \n 40971220 \n \n \n 40971227 \n 40971227 \n https://40971227.github.io/cad2021_hw/ \n 40971227 \n \n \n \n', 'tags': '', 'url': 'Hwpages.html'}, {'title': 'Wink', 'text': '\n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Wink.html'}, {'title': 'HW1', 'text': '作業一: meArm Robot 零件繪圖與機電運動模擬場景製作 \n Step1 : 下載  meARM.7z  這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊. \n meArm_75-0040_v1.pdf  則是另外一本組立參考手冊. \n Step2 : 從課程網頁中的  Compile CoppeliaSim 頁面 , 下載  coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z  (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件. \n Step3 : 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,\xa0 經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件 匯入  CoppeliaSim 進行組裝配置後, 以  UI 介面 中的 slider 控制 meArm Robot 各軸的旋轉作動. \n 2b CAD 套件分配結果:  https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt \n 附件: \n 1. CAD 套件分配表: \n sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace \n 2a 套件亂數分配結果 \n 2b 套件亂數分配結果 \n 2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用  shape edit modes  轉為  clean model , 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes). \n 3. meARM Robot  動態模擬場景 的建構, 可參考  0 ,  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 , 也可參考  Uarm Robot model  與相關 影片 . \n 4. CoppeliaSim design dynamic simulations  說明頁面 . \n 5.  網際 Lua  程式執行. \n 6.  meArm.slvs ,  meArm_in_solvespace.slvs \n 7. UI 介面程式參考: \n function closeEventHandler(h)\n    sim.addLog(sim.verbosity_scriptinfos,\'Window \'..h..\' is closing...\')\n    simUI.hide(h)\nend\n\nfunction joint1_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta1 set to \'..newVal)\n    sim.setJointTargetPosition(joint1, newVal*deg)\nend\n\nfunction joint2_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta2 set to \'..newVal)\n    sim.setJointTargetPosition(joint2, newVal*deg)\nend\n\nfunction joint3_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta3 set to \'..newVal)\n    sim.setJointTargetPosition(joint3, newVal*deg)\nend\n\nfunction joint16_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta16 set to \'..newVal)\n    sim.setJointTargetPosition(joint16, newVal*deg)\n    sim.setJointTargetPosition(joint20, -newVal*deg)\nend\n\nfunction sysCall_init()\n    -- do some initialization here\n    joint1 = sim.getObjectHandle(\'motor1\')\n    joint2 = sim.getObjectHandle(\'motor2\')\n    joint3 = sim.getObjectHandle(\'motor3\')\n    joint16 = sim.getObjectHandle(\'motor16\')\n    joint20 = sim.getObjectHandle(\'motor20\')\n    i = 0\n    deg = math.pi/180\n    print(i)\n    xml = [[\n<ui closeable="true" on-close="closeEventHandler" resizable="true">\n    <label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" />\n    <tabs>\n        <tab title="Numeric">a\n            <label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" />\n            <label text="" id="3000" wordwrap="true" />\n            <label text="theta1" /> <hslider tick-position="above" tick-interval="1" \n            minimum="0" maximum="360" on-change="joint1_rotate" />\n            <label text="theta2" /> <hslider tick-position="above" tick-interval="1" \n            minimum="-90" maximum="65" on-change="joint2_rotate" />\n            <label text="theta3" /> <hslider tick-position="above" tick-interval="1" \n            minimum="-90" maximum="185" on-change="joint3_rotate" />\n            <label text="theta16" /> <hslider tick-position="above" tick-interval="1" \n            minimum="0" maximum="15" on-change="joint16_rotate" />\n        </tab>\n    </tabs>\n</ui>\n]]\n    ui=simUI.create(xml)\n    \nend \n \n (From:  2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf ) \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': '軟體下載', 'text': 'solvespace/onshape \n solvespace \n https://www.youtube.com/watch?v=Zz4COU8Re-s \n \n', 'tags': '', 'url': '軟體下載.html'}, {'title': 'Autocad繪圖', 'text': '分割前 \n \n 分割後 \n \n https://www.youtube.com/watch?v=Ssa2G5nCWkc \xa0 \n', 'tags': '', 'url': 'Autocad繪圖.html'}, {'title': 'onshape 繪圖', 'text': '\n Onshape是一個計算機輔助設計(CAD)軟件系統，通過軟件及服務(SAAS) 模型通過 Internet 交付。它廣泛使用雲計算，在基於Internet的服務器上執行計算密集型處理和渲染，用戶可以通過Web瀏覽器或iOS和Android應用程序與系統進行交互。 \n \n 特點 \n \n 2012 年 11 月，SolidWorks 前 CEO Jon Hirschtick 和 John McEleney 帶領六位聯合創始人推出了 Belmont Technology，這個佔位符名稱後來改為 Onshape。該公司的第一輪融資來自 North Bridge Venture Partners 和 Commonwealth Capital 的 900 萬美元。 \n 2015 年 3 月，在與 52 個國家/地區的一千多名 CAD 專業人員進行預生產測試後，Onshape 發布了其云 CAD 軟件的公測版。Beta 版發布中包括適用於 iPhone 的 Onshape。 \n 2015 年 8 月，該公司發布了適用於 Android 的 Onshape 應用程序。 \n 2015 年 12 月，Onshape 推出了完整的商業版本。 公司還推出了 Onshape App Store，提供 CAM、模擬、渲染和其他基於雲的工程工具。Onshape App Store 與 24 個開發者合作夥伴一起推出。 \n 2016 年 4 月，Onshape 推出了其教育計劃，其中包含面向大學生和教育工作者的免費版 Onshape Professional。 \n 2016 年 5 月，Onshape 發布了 FeatureScript，這是一種新的開源（MIT 許可）編程語言，用於創建和自定義 CAD 功能。 \n', 'tags': '', 'url': 'onshape 繪圖.html'}, {'title': 'onshape安裝配置', 'text': '\n Onshape: \n 至  https://www.onshape.com/en/  申請帳號後使用. \n \n', 'tags': '', 'url': 'onshape安裝配置.html'}, {'title': 'onshape\xa0操作流程', 'text': 'onshape零組件繪圖操作流程影片\xa0 https://www.youtube.com/watch?v=g7gKHpUEJj8 \n onshape 零組件繪圖教學影片 (Wink) \n \n 若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱.', 'tags': '', 'url': 'onshape\xa0操作流程.html'}, {'title': 'solvespace繪圖', 'text': 'SolveSpace是一個免費（自由）和開源的2D 和3DCAD計算機輔助設計程序。它是一個基於約束的參數化建模器，具有簡單的機械仿真功能。2.1 版以後可在 Windows、Linux 和 macOS 上運行（在 Linux 下也可作為安裝）。它由 Jonathan Westhues 和一個志願者社區開發。 \n 特點 \n \n 建模 3D 零件 - 使用拉伸、旋轉和布爾 （聯合/差異）操作進行繪製 \n 建模 2D 零件 - 將零件繪製為單個部分，並導出為DXF、PDF 或SVG ；使用 3D 裝配來驗證適合度 \n 準備CAM 數據 - 為水刀機或激光切割機導出 2D 矢量藝術；或生成STEP或STL ，用於導入第三方CAM軟件 \n 機構設計——使用約束求解器模擬平面或空間連接，包括銷、球或滑動接頭 \n 平面和立體幾何——用實時尺寸圖代替手工求解的三角函數和電子表格 \n \n', 'tags': '', 'url': 'solvespace繪圖.html'}, {'title': 'solvespace安裝配置', 'text': 'solvespace套件下載安裝與配置 \n \n 若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱.', 'tags': '', 'url': 'solvespace安裝配置.html'}, {'title': 'solvespace操作流程', 'text': 'solvespace 組件繪圖操作流程影片 (Youtube) \n solvespace 零組件繪圖教學影片 (Wink) \n \n 若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱.', 'tags': '', 'url': 'solvespace操作流程.html'}, {'title': '運動場景', 'text': 'CAD1: \n CAD1 零件轉出後轉入 CoppeliaSim 操作影片 (Youtube) \n CAD1 零件轉入 CoppeliaSim 教學影片 (Wink) \n CAD1 轉入 Coppeliasim 教學影片 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020  零件轉入 CoppeliaSim 教學影片」且加上 語音說明 與 字幕. \n CAD2: \n CAD2 零件轉出後轉入 CoppeliaSim 操作影片 (Youtube) \n CAD2 零件轉入 CoppeliaSim 教學影片 (Wink) \n CAD2 轉入 Coppeliasim 教學影片 embedded 影片: 標題必須為「 NFU - MDE - cad2021 - 學號 - SW2020  零件轉入 CoppeliaSim 教學影片」且加上 語音說明 與 字幕. \n 若使用 Solidworks 2017 版, 則將 SW2020 換為 SW2017, 其他套件 INV2020 代表 AutoDesk Inventor 2020 版, 還有 Onshape 與 Solvespace 等套件名稱. \n', 'tags': '', 'url': '運動場景.html'}, {'title': 'W13', 'text': 'Inventor繪圖 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W13.html'}, {'title': 'HW1-1', 'text': 'HW1-1 佔學期成績 15% \n HW1-1 必須在 2021.12.01 22:00 之前完成. \n HW1-1 具體項目成果回報區 將於 2021.11.18 開啟, 於  2021.12.01 22:00 關閉. \n 作業 1-1: Mirobot 機械手臂場景組合 \n 說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至  Task1-1  中六個自由度的 Mirobot 機械手臂. \n mirobot_part1_to_part5.7z  為取自 \xa0 https://github.com/wlkata/Mirobot-STL  的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過  UI 介面 中的 slider 控制各軸作動旋轉的運動模型. \n 請根據  Task1-1  中的說明, 完成各項指定任務. \n', 'tags': '', 'url': 'HW1-1.html'}, {'title': 'HW2', 'text': 'HW2 佔學期成績 20% \n HW2 必須在 2021.12.22 22:00 之前完成. \n HW2 具體項目成果回報區 將於 2021.12.09 開啟, 於  2021.12.22 22:00 關閉. \n meArm 逆向運動學與網際參數式 CAD API 結合應用. \n 請將  https://github.com/mdecourse/meArm  中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制. \n 請利用  Task2  中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求. \n 參考: \n 2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf \n Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf \n KINEMATIC ANALYSIS FOR ROBOT ARM.pdf \n https://codebender.cc/user/MeArm \n https://github.com/mdecourse/meArmPi \n /downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf \n https://github.com/mdecourse/me-arm-ik \n https://github.com/mdecourse/mearm_model \n https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html \n https://github.com/mdecourse/InefficientSkittleSorter \n https://mearm.com \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 為選項作業. \n HW3 具體項目成果回報區 將於 2021.12.09 開啟, 於  2022.01.05 22:00 關閉 \n https://mde.tw/cad2021/content/Task3.html \xa0 \n https://mde.tw/cad2021/content/Task4.html \n https://mde.tw/cad2021/content/Task5.html \n https://mde.tw/cad2021/content/Task6.html \n https://mde.tw/cad2021/content/Task7.html \n 請從上列 Tasks 中自行選擇項目內容完成 HW3. \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Final Project', 'text': 'Final Project 佔學期成績 40%. \n 2a 與 2b 必須在 2022.01.06 上課之前完成 Final Project \n Final Project 具體項目成果回報區 將於 2021.12.09 開啟, 於  2022.01.05 22:00 關閉 \n \n \n onshape連桿繪製過程及組合 \n \n \n \n \n \n \n   \n \n \n \n \n \n \n \n ----------------------------------------------------- \n coppeliasim運轉 \n \n \n \n \n \n \n   \n \n \n \n \n \n \n \n ----------------------------------------------------- \n \n \n \n \n   \n \n \n \n \n', 'tags': '', 'url': 'Final Project.html'}, {'title': '期末考試', 'text': '\n 第三階段 \n \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': '期末考試.html'}, {'title': '期末心得', 'text': '高中時完全沒有接觸繪圖軟體，在大一的製圖課中學習了autocad，學到了一項技能，而在這堂課中多學習了一樣onshape，多會了一樣繪圖程式，至於solvespace我還不算會操作。除了繪圖程式，還學習用wink拍影片，將自己的作業內容用wink展現出來，wink不只有錄影的功能，還可以將畫面螢幕拍成很多照片，wink會自動將那些照片轉換為影片。CoppeliaSim是將之前畫製的零件圖組裝成機械手臂，並可以用程式內的工具將機械手臂轉動甩動，但在操作的過程中不能甩得太快，不然機械手臂會變形。也謝謝同組的組員和組長，將我一步一步的拉入課程中，一路上協助我一起完成作業。 \n', 'tags': '', 'url': '期末心得.html'}]};